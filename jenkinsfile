pipeline {
    agent { label 'ubuntu' } 

    environment {
        GITHUB_CRED_ID = "git"
        GITHUB_REPO_URL = 'https://github.com/Hager706/docker_agent.git'
        GITHUB_REPO_BRANCH = 'main'
        DOCKER_REGISTRY = "hagert"
        DOCKER_IMAGE = "app"
        DOCKERHUB_CRED_ID = "hagert"
    }

    stages {
        stage('Check Docker Access') {
            steps {
                script {
                    sh 'docker ps'
                    sh 'docker --version'
                }
            }
        }

        stage('Clone Repository') {
            steps {
                git credentialsId: GITHUB_CRED_ID, url: GITHUB_REPO_URL, branch: GITHUB_REPO_BRANCH
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${BUILD_NUMBER} ."
                }
            }
        }

        stage('Push to DockerHub') {
            steps {
                withCredentials([usernamePassword(credentialsId: "${DOCKERHUB_CRED_ID}", usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh "docker login -u ${USERNAME} -p ${PASSWORD}"
                    sh "docker push ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${BUILD_NUMBER}"
                }
            }
        }
        
        stage('Delete image locally') {
            steps { 
                script {
                    sh "docker rmi ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${BUILD_NUMBER}"
                }
            }
        }
    }

    post {
        success {
            echo "Deployment successful!"
        }
        failure {
            echo "Build or deployment failed."
        }
    }
}